CREATE TABLE IF NOT EXISTS User (
  username VARCHAR(255) PRIMARY KEY,
  password VARCHAR(60) NOT NULL,
  email VARCHAR(255) UNIQUE NOT NULL,
  type ENUM('provider', 'employee', 'client') NOT NULL
);

CREATE TABLE IF NOT EXISTS Provider (
  username VARCHAR(255) PRIMARY KEY,
  company VARCHAR(255) NOT NULL,
  FOREIGN KEY (username) REFERENCES User(username)
);

CREATE TABLE IF NOT EXISTS Employee (
  username VARCHAR(255) PRIMARY KEY,
  employee_name VARCHAR(255) NOT NULL,
  FOREIGN KEY (username) REFERENCES User(username)
);

CREATE TABLE IF NOT EXISTS Client (
  username VARCHAR(255) PRIMARY KEY,
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  FOREIGN KEY (username) REFERENCES User(username)
);

CREATE TABLE IF NOT EXISTS Address (
    address_id INT AUTO_INCREMENT PRIMARY KEY,
    client_username VARCHAR(255),
    street VARCHAR(255) NOT NULL,
    city VARCHAR(255) NOT NULL,
    state VARCHAR(255),
    country VARCHAR(255) NOT NULL,
    postal_code VARCHAR(10),
    address_type ENUM('billing', 'shipping') NOT NULL,
    FOREIGN KEY (client_username) REFERENCES Client(username)
);

CREATE TABLE IF NOT EXISTS `Order` (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    client_username VARCHAR(255) NOT NULL,
    address_id INT NOT NULL,
    employee_username VARCHAR(255) NOT NULL,
    date_created DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    employee_approved BOOLEAN NOT NULL DEFAULT FALSE,
    FOREIGN KEY (client_username) REFERENCES Client(username),
    FOREIGN KEY (employee_username) REFERENCES Employee(username),
    FOREIGN KEY (address_id) REFERENCES Address(address_id)
);


CREATE TABLE IF NOT EXISTS `Order` (
  order_id INT AUTO_INCREMENT PRIMARY KEY,
  client_username VARCHAR(255) NOT NULL,
  employee_username VARCHAR(255) NOT NULL,
  date_created DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  employee_approved BOOLEAN NOT NULL DEFAULT FALSE,
  FOREIGN KEY (client_username) REFERENCES Client(username),
  FOREIGN KEY (employee_username) REFERENCES Employee(username)
);

CREATE TABLE IF NOT EXISTS Product (
  product_id VARCHAR(255) PRIMARY KEY,
  price DECIMAL(10, 2) NOT NULL,
  currency VARCHAR(3) NOT NULL,
  weight TEXT NOT NULL,
  name VARCHAR(255) NOT NULL,
  brand VARCHAR(255) NOT NULL,
  quantity INT NOT NULL,
  prices_availability VARCHAR(255),
  prices_condition TEXT,
  prices_merchant VARCHAR(255),
  prices_sourceURLs TEXT,
  categories TEXT,
  dateAdded VARCHAR(255),
  dateUpdated VARCHAR(255),
  imageURLs TEXT,
  sourceURLs TEXT,
  rating DECIMAL(3, 1),
  nr_rating INT
);


CREATE TABLE IF NOT EXISTS OrderDetails (
  order_detail_id INT AUTO_INCREMENT PRIMARY KEY,
  order_id INT NOT NULL,
  product_id VARCHAR(255) NOT NULL,
  provider_username VARCHAR(255) NOT NULL,
  provider_approved BOOLEAN NOT NULL DEFAULT FALSE,
  quantity INT NOT NULL,
  FOREIGN KEY (order_id) REFERENCES `Order`(order_id),
  FOREIGN KEY (product_id) REFERENCES Product(product_id),
  FOREIGN KEY (provider_username) REFERENCES Provider(username)
);



